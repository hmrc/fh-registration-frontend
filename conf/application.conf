# Copyright 2018 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Copyright 2018 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
include "frontend.conf"

appName = "fh-registration-frontend"
application.router = prod.Routes

play {
  filters.headers.contentSecurityPolicy = "default-src 'self' 'unsafe-inline' localhost:9000 localhost:9032 localhost:9250 stats.g.doubleclick.net www.google-analytics.com data:"
  application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

  modules {
    enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

    enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"
    enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"

    enabled += "uk.gov.hmrc.play.bootstrap.FrontendModule"
    enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"
    enabled += "uk.gov.hmrc.fhregistrationfrontend.cache.ShortLivedCacheModule"
    enabled += "uk.gov.hmrc.fhregistrationfrontend.cache.SessionCacheModule"
  }

  http {
    requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"
    errorHandler = "uk.gov.hmrc.fhregistrationfrontend.config.ErrorHandler"



    filters = "uk.gov.hmrc.play.bootstrap.filters.FrontendFilters"
  }

}

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
# Not set here so that MDTP frontends share the same secret key in the local environment
# (see common.conf in frontend-bootstrap).
# In server environments the secret comes from app-config-common
# play.crypto.secret="jUjdS6shdZyMBjCLbUDCWoRF7DtiBOzjrdzy0IORfQt8s1FIvy5641qH7t2GiD11"


#encryption key for save4later
json.encryption = ${cookie.encryption}

google-analytics {
  token = "UA-43414424-32"
  host = auto
}

assets {
  version = "3.0.2"
  version = ${?ASSETS_FRONTEND_VERSION}
  url = "http://localhost:9032/assets/"
}

services.verificationUrl = "http://localhost:9227/verification/otac/login"

formMaxExpiryDays = 27

Dev {
  microservice {
    metrics {
      graphite {
        host = localhost
        port = 2003
        prefix = play.${appName}.
        enabled = true
      }
    }

    services {
      surveyRedirectUrl = "http://localhost:9514/feedback-survey?origin=fhdds"
      cachable {
        short-lived-cache {
          protocol = http
          host = localhost
          port = 9272
          domain = save4later
        }
        session-cache {
          host = localhost
          port = 8400
          domain = keystore
        }
      }

      address-lookup {
        host = localhost
        port = 9022
      }

      auth {
        host = localhost
        port = 8500
        login_path = "/gg/sign-in"
        logout_path = "/gg/sign-out"
        login-callback {
          url = "http://localhost:1118/fhdds"
        }
        logout-callback {
          url = "http://localhost:1118/fhdds/signed-out"
        }
        company-auth {
          host = localhost
          port = 9025
          url = "http://localhost:9025"
          uri = "/gg/sign-in"
        }
      }

      fhdds {
        protocol = http
        host = localhost
        port = 1119
      }

      email-verification {
        host = localhost
        port = 9891
      }

      fhdds-front {
        host = localhost
        port = 1118
      }

      business-customer-frontend {
        host = localhost
        port = 9923
      }

      business-customer-urls {
        business-verification: "http://localhost:9923/business-customer/FHDDS?backLinkUrl=http://localhost:1118/fhdds/continue"
      }

      cachable {
        short-lived-cache {
          host = localhost
          port = 9272
          domain = save4later
          journey.cache = "fh-registration-frontend"
        }

      }
      contact-frontend-url-base = "http://localhost:9250"
      fhdds-frontend-url-base = "http://localhost:1118/fhdds"
    }
  }

  metrics {
    name = ${appName}
    rateUnit = SECONDS
    durationUnit = SECONDS
    showSamples = true
    jvm = true
    enabled = true
  }

  auditing {
    enabled = true
    traceRequests = true
    consumer {
      baseUri {
        host = localhost
        port = 8100
      }
    }
  }

}

Prod {
  microservice {
    metrics {
      graphite {
        host = localhost
        port = 2003
        prefix = play.${appName}.
        enabled = true
      }
    }

    services {
      surveyRedirectUrl = "/feedback-survey?origin=fhdds"

      cachable {
        short-lived-cache {
          host = save4later.protected.mdtp
          port = 80
          domain = save4later
        }
        session-cache {
          host = key-store.public.mdtp
          port = 80
          domain = keystore
        }
      }

      auth {
        host = auth.protected.mdtp
        port = 80
        login_path = "/gg/sign-in"
        logout_path = "/gg/sign-out"
        login-callback {
          url = "/fhdds"
        }

        logout-callback {
          url = "/fhdds/signed-out"
        }

        company-auth {
          protocol = http
          host = "http://company-auth-frontend.public.mdtp"
          port = 80
          url = "http://company-auth-frontend.public.mdtp"
          uri = "/gg/sign-in"
          redirectRequired = "yes"
        }
      }

      contact-frontend {
        host = contact-frontend.public.mdtp
        port = 80
      }

      email-verification {
        host = email-verification.public.mdtp
        port = 80
      }

      fhdds {
        protocol = http
        host = fh-registration.protected.mdtp
        port = 80
      }

      fhdds-front {
        protocol = http
        host = fh-registration-frontend.public.mdtp
        port = 80
      }

      contact-frontend-url-base = ""
      fhdds-frontend-url-base = "/fhdds"
    }
  }

  metrics {
    graphite {
      host = graphite
      port = 2003
      prefix = play.${appName}.
      enabled = true
    }
  }

  auditing {
    enabled = true
    traceRequests = true
    consumer {
      baseUri {
        host = datastream.protected.mdtp
        port = 80
      }
    }
  }

}

Test {
  microservice {
    metrics {
      graphite {
        host = localhost
        port = 2003
        prefix = play.${appName}.
        enabled = true
      }
    }

    services {
      auth {
        host = localhost
        port = 8500
        login_path = "/gg/sign-in"
        logout_path = "/gg/sign-out"
        login-callback {
          url = "http://localhost:1118"
        }
        logout-callback {
          url = "/fhdds/signed-out"
        }

        company-auth {
          host = localhost
          port = 9025
          url = "http://localhost:9025"
          uri = "/gg/sign-in"
        }
      }

      fhdds {
        host = localhost
        port = 1119
      }

      fhdds-front {
        host = localhost
        port = 1118
      }
    }
  }
  auditing {
    enabled = true
    traceRequests = true
    consumer {
      baseUri {
        host = localhost
        port = 8100
      }
    }
  }
}
